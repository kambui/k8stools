steps:
- id: 'Login'
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'echo "$$PASSWORD" | docker login registry.redhat.io --username "$$USERNAME" --password-stdin']
  secretEnv: ['USERNAME', 'PASSWORD']
- id: 'Build'
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/cpaas-debug:$COMMIT_SHA', '-f', 'Containerfile', '.']
- id: 'Tag latest'
  name: 'gcr.io/cloud-builders/docker'
  args: ['tag', 'gcr.io/$PROJECT_ID/cpaas-debug:$COMMIT_SHA', 'gcr.io/$PROJECT_ID/cpaas-debug:latest']
- id: 'Push'
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/cpaas-debug:$COMMIT_SHA']
- id: 'Push Latest'
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/cpaas-debug:latest']
- id: 'package-debugger-chart'
  name: 'gcr.io/cloud-builders/helm' # Use a Helm builder image
  args: ['package', 'charts/debugger'] # Package the Helm chart in the current directory
- id: 'push-chart-to-artifact-registry'
  name: 'gcr.io/cloud-builders/gcloud'
  args: ['artifacts', 'docker', 'push', 'gcr.io/$PROJECT_ID/debugger']
availableSecrets:
  secretManager:
  - versionName: $_REGISTRY_USER_SECRET
    env: USERNAME
  - versionName: $_REGISTRY_TOKEN_SECRET
    env: PASSWORD
