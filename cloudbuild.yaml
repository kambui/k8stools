steps:
- id: 'Login-Registry'
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'echo "$$PASSWORD" | docker login registry.redhat.io --username "$$USERNAME" --password-stdin']
  secretEnv: ['USERNAME', 'PASSWORD']
- id: 'Build-cpaas-debug-image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/cpaas-debug:$COMMIT_SHA', '-f', 'Containerfile', '.']
- id: 'Tag-Latest-cpaas-debug-image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['tag', 'gcr.io/$PROJECT_ID/cpaas-debug:$COMMIT_SHA', 'gcr.io/$PROJECT_ID/cpaas-debug:latest']
- id: 'Push-Commit-SHA'
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/cpaas-debug:$COMMIT_SHA']
- id: 'Push-Latest'
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/cpaas-debug:latest']
- id: 'package-and-push-debugger-chart'
  name: 'alpine/helm:latest' # Use a Helm builder image
  entrypoint: 'sh'
  args: 
  - '-c' 
  - |
    mkdir -p output
    helm package charts/debugger --destination ./output/
    helm push ./output/debugger-*.tgz oci://gcr.io/$PROJECT_ID/debugger
availableSecrets:
  secretManager:
  - versionName: $_REGISTRY_USER_SECRET
    env: USERNAME
  - versionName: $_REGISTRY_TOKEN_SECRET
    env: PASSWORD
